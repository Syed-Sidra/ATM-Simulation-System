/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package atmsimulationsystem;

import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class Fastcash1 extends javax.swing.JFrame {
    private String pin;

    /**
     * Creates new form Fastcash1
     */
    public Fastcash1() {
        initComponents();
    }

    Fastcash1(String pinnumber) {
        this.pin=pinnumber;
                initComponents();
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SELECT WITHDRAW AMOUNT");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(370, 170, 327, 40);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setText("Rs 100");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(370, 250, 102, 30);

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton2.setText("Rs 1000");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(600, 250, 102, 30);

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton3.setText("Rs 5000");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(600, 290, 102, 30);

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton4.setText("Rs 10000");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(600, 330, 102, 30);

        jButton5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton5.setText("Rs 8000");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(370, 330, 102, 30);

        jButton6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton6.setText("BACK");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(600, 370, 102, 30);

        jButton7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton7.setText("Rs 2000");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(370, 290, 102, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atmsimulationsystem/images/atm4.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 10, 1270, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
 String amount = "2000";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
          String amount = "8000";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             String amount = "1000";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
         String amount = "100";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String amount = "5000";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            } // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
           String amount = "10000";
      
           DB.DBConnection db = new DB.DBConnection();
           
           try {
               db.rst = db.st.executeQuery("select * from banktransaction where pin = '"+pin+"' ");
           int balance = 0;
               while(db.rst.next()){
                   if(db.rst.getString("type").equals("Deposit")){
                       balance += Integer.parseInt(db.rst.getString("amount"));
                   }
                   else{
                        balance -= Integer.parseInt(db.rst.getString("amount"));
                       }
                  
               }
                if(balance < Integer.parseInt(amount)){
                       JOptionPane.showMessageDialog(this,"Insufficient balance");
                   }
                Date date = new Date();
                db.st.executeUpdate("insert into banktransaction values('"+pin+"','"+date+"','withdraw','"+amount+"')");
                JOptionPane.showMessageDialog(null,"Rs " +amount+ "Debited successfully");
                
                new Transaction(pin).setVisible(true);
                this.setVisible(false);
           }
            catch (Exception ex) {
                ex.printStackTrace();
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        new Transaction(pin).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fastcash1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fastcash1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fastcash1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fastcash1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fastcash1("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
